{"version":3,"sources":["logo.svg","components/header/header.jsx","components/footer/footer.jsx","components/contact-form/contact-form.jsx","components/jumbotron/jumbotron.jsx","pages/home.jsx","pages/about.jsx","pages/furnitures.jsx","pages/shop.jsx","pages/contact.jsx","routes/routes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","useState","isBurgerActive","setisBurgerActive","class","useLocation","pathname","role","aria-label","to","aria-expanded","data-target","onClick","aria-hidden","id","Footer","ContactForm","type","placeholder","required","Jumbotron","Home","count","setCount","src","logo","className","alt","About","Furnitures","Shop","Contact","Routes","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0af4a6bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    const [isBurgerActive, setisBurgerActive] = useState(false);\r\n    return (\r\n        <header class={`${useLocation().pathname === \"/\" ? \"home\" : \"nothome\"}`}>\r\n            <nav class=\"navbar bg-transparent\" role=\"navigation\" aria-label=\"main navigation\">\r\n                <div class=\"navbar-brand\">\r\n                    <Link to=\"/\" class={`navbar-item nav-link${useLocation().pathname === \"/\" ? \" is-current\" : \"\"}`}>Woodstock</Link>\r\n                    <button role=\"button\" class={`navbar-burger burger${isBurgerActive ? \" is-active\" : \"\"}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"mainMenu\" onClick={() => setisBurgerActive(!isBurgerActive)}>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                    </button>\r\n                </div>\r\n                <div id=\"mainMenu\" class={`navbar-menu${isBurgerActive ? \" is-active has-background-black\" : \"\"}`}>\r\n                    <div class=\"navbar-end\">\r\n                        <Link to=\"/about\" class={`navbar-item nav-link${useLocation().pathname === \"/about\" ? \" is-current\" : \"\"}`} onClick={() => setisBurgerActive(false)}>About</Link>\r\n                        <Link to=\"/furnitures\" class={`navbar-item nav-link${useLocation().pathname === \"/furnitures\" ? \" is-current\" : \"\"}`} onClick={() => setisBurgerActive(false)}>Furnitures</Link>\r\n                        <Link to=\"/shop\" class={`navbar-item nav-link${useLocation().pathname === \"/shop\" ? \" is-current\" : \"\"}`} onClick={() => setisBurgerActive(false)}>Shop</Link>\r\n                        <Link to=\"/contact\" class={`navbar-item nav-link${useLocation().pathname === \"/contact\" ? \" is-current\" : \"\"}`} onClick={() => setisBurgerActive(false)}>Contact</Link>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer class=\"footer\">\r\n            <h3 class=\"title is-3\">Woodstock</h3>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './contact-form.css';\r\n\r\nconst ContactForm = () => {\r\n    return (\r\n        <section class=\"section contact-form\">\r\n            <h2 class=\"title is-2\">Contact us</h2>\r\n            <form class=\"container\">\r\n                <div class=\"field is-grouped is-grouped-centered\">\r\n                    <div class=\"control is-expanded\">\r\n                    <label class=\"label\">First name</label>\r\n                        <input class=\"input\" type=\"text\" placeholder=\"First name\" required/>\r\n                    </div>\r\n                    <div class=\"control is-expanded\">\r\n                        <label class=\"label\">Last name</label>\r\n                        <input class=\"input\" type=\"text\" placeholder=\"Last name\" required/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label class=\"label\">Email</label>\r\n                    <div class=\"control has-icons-left has-icons-right\">\r\n                        <input id=\"email\" class=\"input is-danger\" type=\"email\" placeholder=\"Email\" required/>\r\n                        <span class=\"icon is-small is-left\">\r\n                        <i class=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                        <span class=\"icon is-small is-right\">\r\n                        <i class=\"fas fa-exclamation-triangle\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <p class=\"help is-danger\">This email is invalid</p>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label class=\"label\">Message</label>\r\n                    <div class=\"control\">\r\n                        <textarea id=\"message\" class=\"textarea\" placeholder=\"Enter your message here\" required></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <div class=\"control\">\r\n                        <button id=\"submit\" class=\"button is-link\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport './jumbotron.css';\r\n\r\nconst Jumbotron = () => {\r\n    return (\r\n        <section class=\"hero is-fullheight jumbotron\">\r\n            <div class=\"hero-body\">\r\n                <div class=\"container\">\r\n                    <h1 class=\"title is-1\">Woodstock</h1>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React, {useState} from 'react';\r\nimport logo from '../logo.svg';\r\nimport { Jumbotron, ContactForm } from '../components';\r\n\r\nconst Home = () => {\r\n    const [count, setCount] = useState(0);\r\n    return (\r\n        <main>\r\n            <Jumbotron/>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>\r\n            Click me\r\n            </button>\r\n            <ContactForm/>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <main>\r\n            <h1 class=\"title is-1\">About</h1>\r\n            <section class=\"section\">\r\n                <p>About us</p>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Furnitures = () => {\r\n    return (\r\n        <main>\r\n            <h1 class=\"title is-1\">Furnitures</h1>\r\n            <section class=\"section\">\r\n                <p>Furnitures description</p>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Furnitures;","import React from 'react';\r\n\r\nconst Shop = () => {\r\n    return (\r\n        <main>\r\n            <h1 class=\"title is-1\">Shop</h1>\r\n            <section class=\"section\">\r\n                <p>Shop</p>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Shop;","import React from 'react';\r\nimport { ContactForm } from '../components';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <main>\r\n            <ContactForm/>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Home, About, Furnitures, Shop, Contact } from '../pages';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/furnitures\">\r\n            <Furnitures />\r\n          </Route>\r\n          <Route path=\"/shop\">\r\n            <Shop />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Header, Footer } from './components';\nimport Routes from './routes/routes';\n\nfunction App() {\n  return (\n    <Router>\n        <Header/>\n        <Routes/>\n        <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}